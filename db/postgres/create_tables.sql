-- function createTable() {
--  pg.connect(connectionString, function (err, client, done) {
--   if (err) throw err;
--   var query = client.query('CREATE TABLE IF NOT EXISTS testuserscards(card_id SERIAL PRIMARY KEY, username varchar(100), cc bytea)');

--   query.on('end', function () {
--    client.end();
--   });
--  });
-- }

/*DROP TABLE IF EXISTS products CASCADE;
CREATE TABLE products (
  product_id integer PRIMARY KEY,
  product_name text NOT NULL,
  slogan text,
  product_description text,
  category text NOT NULL,
  default_price numeric(12, 2)
);


DROP TABLE IF EXISTS features CASCADE;
CREATE TABLE features (
  feature_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  product_id integer NOT NULL REFERENCES products,
    ON DELETE CASCADE
  feature text NOT NULL,
  feature_value text NOT NULl,
  UNIQUE (product_id, feature, feature_value)
);

/* might want to use the HSTORE data type instead for features (can convert to json or a set), or honestly just keep it in json*/

/*DROP TABLE IF EXISTS styles CASCADE;
CREATE TABLE styles (
  style_id integer PRIMARY KEY,
  product_id integer NOT NULL REFERENCES products,
    ON DELETE CASCADE
  style_name text NOT NULL,
  sale_price numeric(12, 2) DEFAULT NULL,
  original_price numeric(12, 2) DEFAULT (SELECT default_price FROM products INNER JOIN styles USING (product_id)),
  default_style boolean DEFAULT (false)
);


/*DROP TABLE IF EXISTS photos CASCADE;
CREATE TABLE photos (
  photo_id int PRIMARY KEY,
  style_id integer,
  photo_url varchar(1500),
  thumbnail_url text
);


/*DROP TABLE IF EXISTS skus CASCADE;
CREATE TABLE skus (
  sku integer PRIMARY KEY,
  style_id integer NOT NULL,
  size text NOT NULL,
  quantity integer DEFAULT 0
);

/*DROP TABLE IF EXISTS related CASCADE;
CREATE TABLE related (
  related_product_id integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  product_id integer REFERENCES products NOT NULL,
  related_id integer NOT NULL
);