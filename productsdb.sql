
/* PostgreSQL database*/

/*const { Client } = require('pg');

const products = new Client();
products.connect();
products.query('SELECT $1::text as message', ['Hello world!'], (err, res) => {
  console.log(err ? err.stack : res.rows[0].message) // Hello World!
});*/

DROP TABLE IF EXISTS products CASCADE;
CREATE TABLE products (
  product_id integer PRIMARY KEY,
  product_name text NOT NULL,
  slogan text,
  product_description text,
  category text NOT NULL,
  default_price numeric(6, 2)
);

DROP TABLE IF EXISTS features CASCADE;
CREATE TABLE features (
  feature_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  feature_name text,
  feature_value text,
  product_id integer NOT NULL REFERENCES products
);

DROP TABLE IF EXISTS styles CASCADE;
CREATE TABLE styles (
  style_id integer PRIMARY KEY,
  style_name text NOT NULL,
  original_price numeric(6, 2) CHECK (original_price > 0),
  sale_price numeric(6, 2),
  CONSTRAINT sale_price_discounted CHECK (sale_price < original_price),
  default_selected boolean DEFAULT (false),
  product_id integer NOT NULL REFERENCES products
);

DROP TABLE IF EXISTS photos CASCADE;
CREATE TABLE photos (
  photo_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  thumbnail_url text,
  photo_url text,
  style_id integer NOT NULL REFERENCES styles,
  product_id integer NOT NULL REFERENCES products,
  UNIQUE (thumbnail_url, photo_url)
);

DROP TABLE IF EXISTS skus CASCADE;
CREATE TABLE skus (
  sku_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sku integer NOT NULL,
  quantity integer DEFAULT 0,
  size text NOT NULL,
  style_id integer NOT NULL REFERENCES styles,
  UNIQUE (sku, style_id, size)
);

DROP TABLE IF EXISTS related CASCADE;
CREATE TABLE related (
  related_product_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  related_id integer REFERENCES products,
  product_id integer NOT NULL REFERENCES products,
  CONSTRAINT related_product_diff CHECK (related_id > product_id OR related_id < product_id)
);

/*client.end();

to exit, control (or command?) d or \q

to run sript: in CLI (outside of postgres), psql <database_name> < <name of file you want to run>
*/